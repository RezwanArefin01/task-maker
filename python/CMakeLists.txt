project(task-maker-py)

# Python

file(GLOB SOURCES_PY "${CMAKE_CURRENT_SOURCE_DIR}/*.py")
file(GLOB UIS_PY "${CMAKE_CURRENT_SOURCE_DIR}/uis/*.py")

SET(SOURCES_MODULE "${CMAKE_CURRENT_BINARY_DIR}/task_maker")
SET(UIS_MODULE "${SOURCES_MODULE}/uis")
SET(PROTOS_MODULE "${SOURCES_MODULE}/protos")
SET(MANAGER_DIRECTORY "${SOURCES_MODULE}/manager")
SET(REMOTE_DIRECTORY "${SOURCES_MODULE}/remote")

file(MAKE_DIRECTORY ${SOURCES_MODULE})
file(MAKE_DIRECTORY ${UIS_MODULE})
file(MAKE_DIRECTORY ${PROTOS_MODULE})
file(MAKE_DIRECTORY ${MANAGER_DIRECTORY})
file(MAKE_DIRECTORY ${REMOTE_DIRECTORY})
file(WRITE "${PROTOS_MODULE}/__init__.py" "")
file(WRITE "${MANAGER_DIRECTORY}/__init__.py" "")
file(WRITE "${REMOTE_DIRECTORY}/__init__.py" "")

string(REGEX REPLACE "[^;]*/" "${PROTOS_MODULE}/" PROTOS_PY_TGT "${PROTOS_PY}")
string(REGEX REPLACE "${CMAKE_CURRENT_SOURCE_DIR}" "${SOURCES_MODULE}" SOURCES_PY_TGT "${SOURCES_PY}")
string(REGEX REPLACE "${CMAKE_CURRENT_SOURCE_DIR}/uis" "${UIS_MODULE}" UIS_PY_TGT "${UIS_PY}")


add_custom_command(OUTPUT ${PROTOS_PY_TGT}
  COMMAND ${CMAKE_COMMAND} -E copy ${PROTOS_PY} ${PROTOS_MODULE}
  DEPENDS protos_py
)

add_custom_command(OUTPUT ${SOURCES_PY_TGT}
  COMMAND ${CMAKE_COMMAND} -E copy ${SOURCES_PY} ${SOURCES_MODULE}
  DEPENDS "${SOURCES_PY}"
)

add_custom_command(OUTPUT ${UIS_PY_TGT}
  COMMAND ${CMAKE_COMMAND} -E copy ${UIS_PY} ${UIS_MODULE}
  DEPENDS "${UIS_PY}"
)

add_custom_command(OUTPUT "${MANAGER_DIRECTORY}/manager"
  COMMAND ${CMAKE_COMMAND} -E copy $<TARGET_FILE:manager> ${MANAGER_DIRECTORY}
  DEPENDS manager
)

add_custom_command(OUTPUT "${REMOTE_DIRECTORY}/server" "${REMOTE_DIRECTORY}/worker"
  COMMAND ${CMAKE_COMMAND} -E copy $<TARGET_FILE:server> $<TARGET_FILE:worker> ${REMOTE_DIRECTORY}
  DEPENDS server worker
)

SET(CPP_EXECUTABLES
  "${MANAGER_DIRECTORY}/manager"
  "${REMOTE_DIRECTORY}/server"
  "${REMOTE_DIRECTORY}/worker"
)

add_custom_target(tmp ALL
  DEPENDS ${PROTOS_PY_TGT} ${UIS_PY_TGT} ${SOURCES_PY_TGT} ${CPP_EXECUTABLES}
)

message("${PROTOS_PY_TGT}")
message("${UIS_PY_TGT}")
message("${SOURCES_PY_TGT}")
