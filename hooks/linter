#!/bin/bash -e

INCLUDES=$(cat .syntastic_cpp_config)
EXCLUDE_CHECKS="-cppcoreguidelines-pro-type-vararg,-misc-unused-parameters,-llvm-header-guard"

PYTHON_EXCLUDE_CHECKS="--disable missing-docstring --disable too-few-public-methods --disable too-many-arguments --disable too-many-instance-attributes --disable too-many-public-methods --disable fixme"

check_file_clang() {
  file="${1}"
  # TODO: add -quiet as soon as it is supported
  clang-tidy --checks=*,${EXCLUDE_CHECKS} \
    --warnings-as-errors=*,${EXCLUDE_CHECKS} ${1} \
    -- -std=c++11 ${INCLUDES}
  git add ${1}
}

check_file_python() {
  pylint -s n ${PYTHON_EXCLUDE_CHECKS} ${1}
  mypy --strict ${1}
  git add ${1}
}

case "${1}" in
  --about )
    echo "Runs a linter on source files"
    ;;
  * )
    for file in `git diff-index --cached --name-only HEAD` ; do
      if [ -f ${file} ]
      then
        if [ ${file: -3} == '.cc' ]
        then
          check_file_clang "${file}"
        fi
        if [ ${file: -4} == '.hpp' ]
        then
          check_file_clang "${file}"
        fi
        if [ ${file: -3} == '.py' ]
        then
          check_file_python "${file}"
        fi
        if [ ${file: -4} == '.pyi' ]
        then
          check_file_python "${file}"
        fi
      fi
    done
    pylint -s n ${PYTHON_EXCLUDE_CHECKS} $(find . -name '*.py')
    mypy --strict $(find . -name '*.py')
    ;;
esac
