syntax = "proto3";

package proto;

message FatalError {
  string msg = 1;
}

message TaskScore {
  string solution = 1;
  float score = 2;
}

message SubtaskScore {
  string solution = 1;
  float score = 2;
  int64 subtask_id = 3;
}

enum EventStatus {
  WAITING = 0;
  RUNNING = 1;
  GENERATING = 2;
  GENERATED = 3;
  VALIDATING = 4;
  VALIDATED = 5;
  SOLVING = 6;
  EXECUTING = 7;
  EXECUTED = 8;
  CHECKING = 9;
  DONE = 10;
  FAILURE = 11;
}

enum TerryTestcaseStatus {
  MISSING = 0;
  CORRECT = 1;
  WRONG = 2;
}

message Compilation {
  string filename = 1;
  // WAITING, RUNNING, DONE, FAILURE
  EventStatus status = 2;
  string stderr = 3;
}

message Generation {
  int64 testcase = 1;
  // WAITING, GENERATING, GENERATED, VALIDATING, VALIDATED, SOLVING, DONE,
  // FAILURE
  EventStatus status = 2;
  string error = 3;
}

message TerryGeneration {
  string solution = 1;
  // WAITING, GENERATING, GENERATED, VALIDATING, VALIDATED, FAILURE
  EventStatus status = 2;
  string error = 3;
}

message EvaluationResult {
  float score = 1;
  string message = 2;
  float cpu_time_used = 3;
  float wall_time_used = 4;
  int64 memory_used_kb = 5;
}

message Evaluation {
  string solution = 1;
  int64 testcase = 2;
  // WAITING, EXECUTING, EXECUTED, CHECKING, DONE, FAILURE
  EventStatus status = 3;
  EvaluationResult result = 4;
}

message TerryEvaluation {
  string solution = 1;
  // EXECUTING, EXECUTED, FAILURE
  EventStatus status = 2;
  string errors = 3;
}

message TerryEvaluationResult {
  float score = 1;
  float gen_cpu_time = 2;
  float gen_wall_time = 3;
  int64 gen_memory_kb = 4;
  float eval_cpu_time = 5;
  float eval_wall_time = 6;
  int64 eval_memory_kb = 7;
  float check_cpu_time = 8;
  float check_wall_time = 9;
  int64 check_memory_kb = 10;
  repeated TerryTestcaseStatus testcases = 11;
  string seed = 12;
}

message TerryCheck {
  string solution = 1;
  // CHECKING, DONE, FAILURE
  EventStatus status = 2;
  string errors = 3;
  TerryEvaluationResult result = 4;
}

message EvaluationStarted {
  int64 id = 1;
}

message EvaluationEnded {
  int64 id = 1;
}

message RunningTaskInfo {
  string description = 1;
  float duration = 2;
}

message RunningTasks {
  repeated RunningTaskInfo task = 1;
}

message Event {
  oneof event_oneof {
    EvaluationStarted evaluation_started = 1;
    FatalError fatal_error = 2;
    TaskScore task_score = 3;
    SubtaskScore subtask_score = 4;
    Compilation compilation = 5;
    Generation generation = 6;
    TerryGeneration terry_generation = 7;
    Evaluation evaluation = 8;
    TerryEvaluation terry_evaluation = 9;
    TerryCheck terry_check = 10;
    EvaluationEnded evaluation_ended = 11;
    RunningTasks running_tasks = 12;
  }
}
